<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Sistema de Gestión Escolar</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f4;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      
    }

    .container {
      background: white;
      padding: 2rem;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      border-radius: 8px;
      width: 300px;
    }

    h1,
    h2 {
      text-align: center;
      color: #333;
    }

    form {
      display: flex;
      flex-direction: column;
      margin: 2rem auto;
    }

    label {
      margin-bottom: 0.5rem;
      color: #555;
    }

    input[type="text"],
    input[type="password"],
    input[type="date"],
    input[type="number"] {
      padding: 0.5rem;
      margin-bottom: 1rem;
      border: 1px solid #ccc;
      border-radius: 4px;
    }

    button {
      padding: 0.5rem;
      background: #28a745;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }

    button:hover {
      background: #218838;
    }

    .error {
      color: red;
      text-align: center;
      margin-bottom: 1rem;
    }

    .success {
      color: green;
      text-align: center;
      margin-bottom: 1rem;
    }

    .nav-menu {
      margin-top: 1rem;
      display: flex;
      justify-content: center;
      gap: 1rem;
    }

    .nav-menu button {
      padding: 0.5rem 1rem;
      background: #007bff;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }

    .nav-menu button:hover {
      background: #0056b3;
    }

    #content-area {
      margin-top: 2rem;
    }
  </style>
</head>

<body>
  <div class="container">
    <h1>Sistema de Gestión Escolar</h1>


    <% if (user) { %>
    <p class="welcome">Bienvenido, <%= user.username %>!</p>
    <p>Rol: <%= user.role %>
    </p>
    <button id="logout-btn">Cerrar sesión</button>

    <div class="nav-menu">
      <% if ([ 'directora' , 'vicedirectora' , 'preceptora' , 'maestra' ].includes(user.role)) { %>
      <button id="view-students-btn">Ver Alumnos</button>
      <% } %>


      <% if (['preceptora'].includes(user.role)) { %>
      <button id="add-student-btn">Añadir Alumno</button>
      <% } %>

      <% if (user.role==='padre' ) { %>
      <button id="view-children-btn">Ver Mis Hijos</button>
      <% } %>
    </div>

    <div id="content-area"></div>

    <% if (user.role==='admin' ) { %>
    <h2>Registrar nuevo usuario</h2>
    <form id="register-form">
      <label for="reg-username">Usuario:</label>
      <input type="text" id="reg-username" name="username" required>
      <label for="reg-password">Contraseña:</label>
      <input type="password" id="reg-password" name="password" required>
      <label for="reg-role">Rol:</label>
      <select id="reg-role" name="role" required>
        <option value="admin">Admin</option>
        <option value="directora">Directora</option>
        <option value="vicedirectora">Vicedirectora</option>
        <option value="preceptora">Preceptora</option>
        <option value="maestra">Maestra</option>
        <option value="padre">Padre</option>
      </select>
      <button type="submit">Registrar</button>
    </form>
    <div id="register-message"></div>
    <% } %>
    <% } else { %>
    <h2>Iniciar sesión</h2>
    <form id="login-form">
      <label for="username">Usuario:</label>
      <input type="text" id="username" name="username" required>
      <label for="password">Contraseña:</label>
      <input type="password" id="password" name="password" required>
      <button type="submit">Iniciar sesión</button>
    </form>
    <div id="login-message"></div>
    <% } %>
  </div>
  
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const loginForm = document.getElementById('login-form');
      const registerForm = document.getElementById('register-form');
      const logoutBtn = document.getElementById('logout-btn');
      const contentArea = document.getElementById('content-area');

      if (loginForm) {
        loginForm.addEventListener('submit', async (e) => {
          e.preventDefault();
          const username = document.getElementById('username').value;
          const password = document.getElementById('password').value;
          try {
            const response = await fetch('/auth/login', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                username,
                password
              })
            });
            const contentType = response.headers.get('content-type');
            if (contentType && contentType.includes('application/json')) {
              const data = await response.json();
              if (response.ok) {
                console.log(data);
                // Aquí deberías recibir el token del servidor y almacenarlo en una cookie
                document.cookie = `access_token=${data.token}; Secure; SameSite=None`; // Ejemplo de cómo establecer la cookie
                location.reload(); // Recargar la página después de iniciar sesión
              } else {
                document.getElementById('login-message').textContent = data.error;
                document.getElementById('login-message').className = 'error';
              }
            } else {
              console.error('Expected JSON, but got:', await response.text());
            }
          } catch (error) {
            console.error('Error:', error);
          }
        });
      }


      if (registerForm) {
        registerForm.addEventListener('submit', async (e) => {
          e.preventDefault();
          const username = document.getElementById('reg-username').value;
          const password = document.getElementById('reg-password').value;
          const role = document.getElementById('reg-role').value;
          try {
            const response = await fetch('/auth/register', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                username,
                password,
                role
              })
            });
            console.log(response);
            const contentType = response.headers.get('content-type');
            if (contentType && contentType.includes('application/json')) {
              const data = await response.json();
              if (response.ok) {
                document.getElementById('register-message').textContent = data.message;
                document.getElementById('register-message').className = 'success';
                registerForm.reset();
              } else {
                document.getElementById('register-message').textContent = data.error;
                document.getElementById('register-message').className = 'error';
              }
            } else {
              console.error('Expected JSON, but got:', await response.text());
            }
          } catch (error) {
            console.error('Error:', error);
          }
        });
      }

      if (logoutBtn) {
        logoutBtn.addEventListener('click', async () => {
          try {
            const response = await fetch('/auth/logout', {
              method: 'POST'
            });
            if (response.ok) {
              location.reload();
            }
          } catch (error) {
            console.error('Error:', error);
          }
        });
      }

      async function viewStudents() {
        try {
          const response = await fetch('/students');
          const contentType = response.headers.get('content-type');
          if (contentType && contentType.includes('application/json')) {
            const students = await response.json();
            contentArea.innerHTML = `
                        <h2>Lista de Alumnos</h2>
                        <ul>
                            ${students.map(student => `<li>${student.name} - ${student.classRoom}</li>`).join('')}
                        </ul>
                    `;
          } else {
            contentArea.innerHTML = '<p class="error">No se pudieron cargar los alumnos</p>';
            console.error('Expected JSON, but got:', await response.text());
          }
        } catch (error) {
          console.error('Error:', error);
        }
      }

      async function addStudent() {
        contentArea.innerHTML = `
    <h2>Añadir Alumno</h2>
    <form id="add-student-form">
        <label for="student-name">Nombre:</label>
        <input type="text" id="student-name" required>
        
        <label for="student-dni">DNI:</label>
        <input type="number" id="student-dni" required>
        
        <label for="student-birth-date">Fecha de Nacimiento:</label>
        <input type="date" id="student-birth-date" required>
        
        <label for="student-address">Dirección:</label>
        <input type="text" id="student-address" required>
        
        <label for="student-contact-name">Nombre del Contacto:</label>
        <input type="text" id="student-contact-name" required>
        
        <label for="student-contact-relationship">Relación del Contacto:</label>
        <input type="text" id="student-contact-relationship" required>
        
        <label for="student-contact-phone">Teléfono del Contacto:</label>
        <input type="text" id="student-contact-phone" required>
        
        <label for="student-turn">Turno:</label>
        <select id="student-turn" required>
            <option value="morning">Mañana</option>
            <option value="afternoon">Tarde</option>
        </select>
        
        <label for="student-classroom">Aula:</label>
        <input type="text" id="student-classroom" required>
        
        <label for="student-teacher-id">ID del Profesor:</label>
        <input type="text" id="student-teacher-id" required>
        
        <button type="submit">Añadir</button>
    </form>
    <p id="add-student-message"></p>
    `;

        document.getElementById('add-student-form').addEventListener('submit', async (e) => {
          e.preventDefault();
          const studentData = {
            name: document.getElementById('student-name').value,
            dni: parseInt(document.getElementById('student-dni').value),
            birth_date: document.getElementById('student-birth-date').value,
            address: document.getElementById('student-address').value,
            contacts: [{
              name: document.getElementById('student-contact-name').value,
              relationship: document.getElementById('student-contact-relationship').value,
              phone: document.getElementById('student-contact-phone').value
            }],
            turn: document.getElementById('student-turn').value,
            classRoom: document.getElementById('student-classroom').value,
            teacherId: document.getElementById('student-teacher-id').value
          };
          try {
            const response = await fetch('/students', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify(studentData)
            });
            if (response.ok) {
              const data = await response.json();
              document.getElementById('add-student-message').textContent = 'Alumno añadido con éxito';
              document.getElementById('add-student-message').className = 'success';
            } else {
              const error = await response.json();
              document.getElementById('add-student-message').textContent = error.message;
              document.getElementById('add-student-message').className = 'error';
            }
          } catch (error) {
            console.error('Error:', error);
            document.getElementById('add-student-message').textContent = 'Error al añadir el alumno';
            document.getElementById('add-student-message').className = 'error';
          }
        });
      }

      async function viewChildren() {
        try {
          const response = await fetch('/mis-hijos');
          const contentType = response.headers.get('content-type');
          if (contentType && contentType.includes('application/json')) {
            const children = await response.json();
            contentArea.innerHTML = `
                        <h2>Mis Hijos</h2>
                        <ul>
                            ${children.map(child => `<li>${child.name} - ${child.classRoom}</li>`).join('')}
                        </ul>
                    `;
          } else {
            contentArea.innerHTML = '<p class="error">No se pudieron cargar los datos de los hijos</p>';
            console.error('Expected JSON, but got:', await response.text());
          }
        } catch (error) {
          console.error('Error:', error);
        }
      }

      document.getElementById('view-students-btn')?.addEventListener('click', viewStudents);
      document.getElementById('add-student-btn')?.addEventListener('click', addStudent);
      document.getElementById('view-children-btn')?.addEventListener('click', viewChildren);
    });
  </script>


</body>

</html>